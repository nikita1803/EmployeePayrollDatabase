*****************************Welcome in Employee payroll service database*****************

UC1 // Created a database of payroll service.

mysql> CREATE DATABASE payroll_service;		# It is use to create a databae.
Query OK, 1 row affected (0.12 sec)

mysql> show databases;				# It is use to show the database.	
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| payroll_service    |
| performance_schema |
| sys                |
+--------------------+
5 rows in set (0.10 sec)

mysql> use payroll_service;			# It is use to Choose the database.
Database changed
mysql> SELECT DATABASE();			# It is use the select the paticular database.
+-----------------+
| DATABASE()      |
+-----------------+
| payroll_service |
+-----------------+
1 row in set (0.00 sec)

UC2 // Create a table of employee payroll

mysql> CREATE TABLE employee_payroll		# It is use to create a tablein the database
    -> (
    -> id       INT unsigned NOT NULL AUTO_INCREMENT,
    -> name     VARCHAR (100) NOT NULL,
    -> salary   Double NOT NULL,
    -> start    Date NOT NULL,
    -> PRIMARY KEY  (id)			# Primary key is use to Create a id as a unique.
    -> );
Query OK, 0 rows affected (1.74 sec)

mysql> DESCRIBE employee_payroll;		# It is use to display the table.
+--------+--------------+------+-----+---------+----------------+
| Field  | Type         | Null | Key | Default | Extra          |
+--------+--------------+------+-----+---------+----------------+
| id     | int unsigned | NO   | PRI | NULL    | auto_increment |
| name   | varchar(100) | NO   |     | NULL    |                |
| salary | double       | NO   |     | NULL    |                |
| start  | date         | NO   |     | NULL    |                |
+--------+--------------+------+-----+---------+----------------+
4 rows in set (0.17 sec)

UC3 // Insert the data into the employee payroll table.

mysql> INSERT INTO employee_payroll(name, salary, start) VALUES  	# It is use to insert the data into the table.
    -> ( 'Bill', 100000.00,'2018-01-03' ),
    -> ( 'Terisa', 200000.00, '2019-11-13' ),
    -> ( 'Charile', 300000.00, '2020-02-21' );
Query OK, 3 rows affected (0.15 sec)
Records: 3  Duplicates: 0  Warnings: 0

UC4 // Retrive the data from the table.

mysql> SELECT * FROM employee_payroll;			# It is use to retrive the data from the table.
+----+---------+--------+------------+
| id | name    | salary | start      |
+----+---------+--------+------------+
|  6 | Bill    | 100000 | 2018-01-03 |
|  7 | Terisa  | 200000 | 2019-11-13 |
|  8 | Charile | 300000 | 2020-02-21 |
+----+---------+--------+------------+
3 rows in set (0.00 sec)

UC5 //Retrive Sallary from the table

mysql> SELECT salary FROM employee_payroll WHERE name = 'BILL';
+--------+
| salary |
+--------+
| 100000 |
+--------+
1 row in set (0.04 sec)
mysql> SELECT*FROM employee_payroll
    -> WHERE start BETWEEN CAST('2019-01-01' AS DATE) AND DATE(NOW());	  # Between cast and date(noew()) is a predefine.
+----+---------+--------+--------+------------+
| id | name    | gender | salary | start      |
+----+---------+--------+--------+------------+
|  7 | Terisa  | F      | 300000 | 2019-11-13 |
|  8 | Charile | M      | 300000 | 2020-02-21 |
+----+---------+--------+--------+------------+
2 rows in set (0.02 sec)

UC6 // Added the gender attribute after the name and assign the gender to the persons.

mysql> ALTER TABLE employee_payroll ADD gender CHAR(1) AFTER name; 	# It is use to alter/ modify the table.
Query OK, 0 rows affected (2.28 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> describe employee_payroll;					# It is use to display the table
+--------+--------------+------+-----+---------+----------------+
| Field  | Type         | Null | Key | Default | Extra          |
+--------+--------------+------+-----+---------+----------------+
| id     | int unsigned | NO   | PRI | NULL    | auto_increment |
| name   | varchar(100) | NO   |     | NULL    |                |
| gender | char(1)      | YES  |     | NULL    |                |
| salary | double       | NO   |     | NULL    |                |
| start  | date         | NO   |     | NULL    |                |
+--------+--------------+------+-----+---------+----------------+
5 rows in set (0.01 sec)

mysql> update employee_payroll set gender = 'F' where name = 'Terisa';		# It is use to update the gender of the persons .
Query OK, 1 row affected (0.38 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> SELECT * FROM employee_payroll;						# To retrive the data from the table.
+----+---------+--------+--------+------------+
| id | name    | gender | salary | start      |
+----+---------+--------+--------+------------+
|  6 | Bill    | NULL   | 100000 | 2018-01-03 |
|  7 | Terisa  | F      | 200000 | 2019-11-13 |
|  8 | Charile | NULL   | 300000 | 2020-02-21 |
+----+---------+--------+--------+------------+
3 rows in set (0.00 sec)

mysql> update employee_payroll set gender = 'M' where name = 'BIill';
Query OK, 0 rows affected (0.00 sec)
Rows matched: 0  Changed: 0  Warnings: 0

mysql> update employee_payroll set gender = 'M' where name = 'Charile';
Query OK, 1 row affected (0.09 sec)
Rows matched: 1  Changed: 1  Warnings: 0

UC7 // using arithmating opertion , calculating the salary

mysql> SELECT AVG(salary) FROM employee_payroll WHERE gender = 'M' GROUP BY gend 	# It is use to find the average according to the gender using group by clause.
er;
+-------------+
| AVG(salary) |
+-------------+
|      200000 |
+-------------+
1 row in set (0.28 sec)

mysql> SELECT AVG(salary) FROM employee_payroll GROUP BY gender;			# It is use to find the average using group by clause.
+-------------+
| AVG(salary) |
+-------------+
|      200000 |
|      300000 |
+-------------+
2 rows in set (0.05 sec)

mysql> SELECT gender, AVG(salary) FROM employee_payroll GROUP BY gender;
+--------+-------------+
| gender | AVG(salary) |
+--------+-------------+
| M      |      200000 |
| F      |      300000 |
+--------+-------------+
2 rows in set (0.00 sec)

mysql> SELECT gender, COUNT(name) FROM employee_payroll GROUP BY gender;		#It is use to count the entrices according to the conditions.
+--------+-------------+
| gender | COUNT(name) |
+--------+-------------+
| M      |           2 |
| F      |           1 |
+--------+-------------+
2 rows in set (0.00 sec)

UC8 // Extend employee_payroll data table

mysql> ALTER TABLE employee_payroll ADD phone_number VARCHAR(250) AFTER name;			# Alter table by adding phone number
Query OK, 0 rows affected (2.56 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> ALTER TABLE employee_payroll ADD address VARCHAR(250) AFTER phone_number;		# Alter table by adding address

Query OK, 0 rows affected (1.26 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> ALTER TABLE employee_payroll ADD department VARCHAR(250) NOT NULL AFTER a		# Alter table by adding department
ddress;
Query OK, 0 rows affected (1.41 sec)
Records: 0  Duplicates: 0  Warnings: 0
mysql> ALTER TABLE employee_payroll ALTER address SET DEFAULT 'TBD';				# Alter table by adding default value
Query OK, 0 rows affected (0.30 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> DESCRIBE employee_payroll;								# To describe the table.
+--------------+--------------+------+-----+---------+----------------+
| Field        | Type         | Null | Key | Default | Extra          |
+--------------+--------------+------+-----+---------+----------------+
| id           | int unsigned | NO   | PRI | NULL    | auto_increment |
| name         | varchar(100) | NO   |     | NULL    |                |
| phone_number | varchar(250) | YES  |     | NULL    |                |
| address      | varchar(250) | YES  |     | TBD     |                |
| department   | varchar(250) | NO   |     | NULL    |                |
| gender       | char(1)      | YES  |     | NULL    |                |
| salary       | double       | NO   |     | NULL    |                |
| start        | date         | NO   |     | NULL    |                |
+--------------+--------------+------+-----+---------+----------------+
8 rows in set (0.06 sec)

UC9 // ALTER TABLE employee_payroll ADD deductions,Taxable_pay, tax,net_pay

mysql> ALTER TABLE employee_payroll ADD deductions Double NOT NULL AFTER basic_p		# Alter table by adding deductions
ay;
Query OK, 0 rows affected (1.75 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> ALTER TABLE employee_payroll ADD taxable_pay Double NOT NULL AFTER deduct		# Alter table by adding taxable_pay
ions;
Query OK, 0 rows affected (1.34 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> ALTER TABLE employee_payroll ADD tax Double NOT NULL AFTER taxable_pay;			# Alter table by adding tax
Query OK, 0 rows affected (1.15 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> ALTER TABLE employee_payroll ADD net_pay Double NOT NULL AFTER tax;			# Alter table by adding net_pay
Query OK, 0 rows affected (1.72 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> describe employee_payroll;
+--------------+--------------+------+-----+---------+----------------+
| Field        | Type         | Null | Key | Default | Extra          |
+--------------+--------------+------+-----+---------+----------------+
| id           | int unsigned | NO   | PRI | NULL    | auto_increment |
| name         | varchar(100) | NO   |     | NULL    |                |
| phone_number | varchar(250) | YES  |     | NULL    |                |
| address      | varchar(250) | YES  |     | TBD     |                |
| department   | varchar(250) | NO   |     | NULL    |                |
| gender       | char(1)      | YES  |     | NULL    |                |
| basic_pay    | double       | NO   |     | NULL    |                |
| deductions   | double       | NO   |     | NULL    |                |
| taxable_pay  | double       | NO   |     | NULL    |                |
| tax          | double       | NO   |     | NULL    |                |
| net_pay      | double       | NO   |     | NULL    |                |
| start        | date         | NO   |     | NULL    |                |
+--------------+--------------+------+-----+---------+----------------+
12 rows in set (0.06 sec)

UC10 // Added two terisa with different department.

mysql> INSERT INTO employee_payroll
    -> (name, department, gender, basic_pay, deductions, taxable_pay, tax, net_p
ay, start) VALUES
    -> ('Terisa' , 'Marketting','F',300000.00,100000.00,200000.00,500000.00,1000
000.00,'2018-01-02');
Query OK, 1 row affected (0.38 sec)

mysql> SELECT * from employee_payroll;
+----+---------+--------------+---------+------------+--------+-----------+-----
-------+-------------+--------+---------+------------+
| id | name    | phone_number | address | department | gender | basic_pay | dedu
ctions | taxable_pay | tax    | net_pay | start      |
+----+---------+--------------+---------+------------+--------+-----------+-----
-------+-------------+--------+---------+------------+
|  6 | Bill    | NULL         | NULL    |            | M      |    100000 |
     0 |           0 |      0 |       0 | 2018-01-03 |
|  7 | Terisa  | NULL         | NULL    |            | F      |    300000 |
     0 |           0 |      0 |       0 | 2019-11-13 |
|  8 | Charile | NULL         | NULL    |            | M      |    300000 |
     0 |           0 |      0 |       0 | 2020-02-21 |
|  9 | Terisa  | NULL         | TBD     | Marketting | F      |    300000 |
100000 |      200000 | 500000 | 1000000 | 2018-01-02 |
+----+---------+--------------+---------+------------+--------+-----------+-----
-------+-------------+--------+---------+------------+
4 rows in set (0.06 sec)

mysql> SELECT * from employee_payroll;
ERROR 2013 (HY000): Lost connection to MySQL server during query
No connection. Trying to reconnect...
Connection id:    16
Current database: payroll_service

+----+---------+--------------+---------+------------+--------+-----------+------------+-------------+--------+---------+------------+
| id | name    | phone_number | address | department | gender | basic_pay | deductions | taxable_pay | tax    | net_pay | start      |
+----+---------+--------------+---------+------------+--------+-----------+------------+-------------+--------+---------+------------+
|  6 | Bill    | NULL         | NULL    |            | M      |    100000 |          0 |           0 |      0 |       0 | 2018-01-03 |
|  7 | Terisa  | NULL         | NULL    |            | F      |    300000 |          0 |           0 |      0 |       0 | 2019-11-13 |
|  8 | Charile | NULL         | NULL    |            | M      |    300000 |          0 |           0 |      0 |       0 | 2020-02-21 |
|  9 | Terisa  | NULL         | TBD     | Marketting | F      |    300000 |     100000 |      200000 | 500000 | 1000000 | 2018-01-02 |
+----+---------+--------------+---------+------------+--------+-----------+------------+-------------+--------+---------+------------+
4 rows in set (0.21 sec)

mysql> UPDATE employee_payroll SET department="Sales" WHERE id=7;
Query OK, 1 row affected (0.08 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> SELECT * from employee_payroll;
+----+---------+--------------+---------+------------+--------+-----------+------------+-------------+--------+---------+------------+
| id | name    | phone_number | address | department | gender | basic_pay | deductions | taxable_pay | tax    | net_pay | start      |
+----+---------+--------------+---------+------------+--------+-----------+------------+-------------+--------+---------+------------+
|  6 | Bill    | NULL         | NULL    |            | M      |    100000 |          0 |           0 |      0 |       0 | 2018-01-03 |
|  7 | Terisa  | NULL         | NULL    | Sales      | F      |    300000 |          0 |           0 |      0 |       0 | 2019-11-13 |
|  8 | Charile | NULL         | NULL    |            | M      |    300000 |          0 |           0 |      0 |       0 | 2020-02-21 |
|  9 | Terisa  | NULL         | TBD     | Marketting | F      |    300000 |     100000 |      200000 | 500000 | 1000000 | 2018-01-02 |
+----+---------+--------------+---------+------------+--------+-----------+------------+-------------+--------+---------+------------+
4 rows in set (0.00 sec)

UC11 //

mysql> CREATE TABLE company						// Created a table name as company
    -> (
    -> company_id       INT unsigned NOT NULL AUTO_INCREMENT,
    -> company_name     VARCHAR(50) NOT NULL,
    -> PRIMARY KEY (COMPANY_id)
    -> );
Query OK, 0 rows affected (1.99 sec)

mysql> INSERT INTO company(company_name) VALUES				// Inserted data into company.
    -> ('TCS'),
    -> ('INFOSYS'),
    -> ('CAPEGEMINI');
Query OK, 3 rows affected (0.20 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> SELECT * FROM company;						// Display the table 
+------------+--------------+
| company_id | company_name |
+------------+--------------+
|          1 | TCS          |
|          2 | INFOSYS      |
|          3 | CAPEGEMINI   |
+------------+--------------+
3 rows in set (0.08 sec)
 mysql> CREATE TABLE employee						// Created a table name as employee
    -> (
    -> employee_id      INT unsigned NOT NULL,
    -> company_id       INT unsigned NOT NULL,
    -> employee_name    VARCHAR(50) NOT NULL,
    -> address          VARCHAR(100) NOT NULL DEFAULT 'TBD',
    -> phone_number     VARCHAR(10) NOT NULL,
    -> gender           VARCHAR(5) NOT NULL,
    -> PRIMARY KEY (employee_id),					// Created primary key of employee_id
    -> FOREIGN KEY(company_id) REFERENCES company(company_id));		// Foreign key is use to connect with company table to employee table.
Query OK, 0 rows affected (1.10 sec)

mysql> INSERT INTO employee VALUES					// Inserted value into employee.
    -> (101,1,'Nikita','Lucknow','9966553366','F'),
    -> (102,2,'Malvika','Lucknow','996653756','F'),
    -> (104,3,'Kamal','Delhi','9966533586','M');
Query OK, 3 rows affected (0.16 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> SELECT * FROM employee;						// Display the employee table.
+-------------+------------+---------------+---------+--------------+--------+
| employee_id | company_id | employee_name | address | phone_number | gender |
+-------------+------------+---------------+---------+--------------+--------+
|         101 |          1 | Nikita        | Lucknow | 9966553366   | F      |
|         102 |          2 | Malvika       | Lucknow | 996653756    | F      |
|         104 |          3 | Kamal         | Delhi   | 9966533586   | M      |
+-------------+------------+---------------+---------+--------------+--------+
3 rows in set (0.30 sec)
mysql> UPDATE employee SET employee_id=103 WHERE address='Delhi';	// Updated employee table.
Query OK, 1 row affected (0.21 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> SELECT * FROM employee;
+-------------+------------+---------------+---------+--------------+--------+
| employee_id | company_id | employee_name | address | phone_number | gender |
+-------------+------------+---------------+---------+--------------+--------+
|         101 |          1 | Nikita        | Lucknow | 9966553366   | F      |
|         102 |          2 | Malvika       | Lucknow | 996653756    | F      |
|         103 |          3 | Kamal         | Delhi   | 9966533586   | M      |
+-------------+------------+---------------+---------+--------------+--------+
3 rows in set (0.07 sec)
mysql> CREATE TABLE employee_department					// Created table employee_department
    -> (
    -> emp_id   INT unsigned NOT NULL,
    -> dept_id  INT NOT NULL,
    -> PRIMARY KEY (emp_id,dept_id),
    -> FOREIGN KEY (emp_id) REFERENCES employee(employee_id),		// Foreign key is use to connect with employee 
    -> FOREIGN KEY (dept_id) REFERENCES department(dept_id)		// Foreign key is use to connect with department
    -> );
Query OK, 0 rows affected (0.78 sec)
mysql> CREATE TABLE payroll						// Created table payroll
    -> (
    -> emp_id   INT DEFAULT NULL,
    -> basic_pay        DOUBLE NOT NULL,
    -> deduction        DOUBLE NOT NULL,
    -> taxable_pay      DOUBLE NOT NULL,
    -> tax              DOUBLE NOT NULL,
    -> net_pay          DOUBLE NOT NULL
    -> );
Query OK, 0 rows affected (1.15 sec)

mysql> INSERT INTO payroll VALUES					// Inserted into payroll
    -> (
    -> 101,15000,2000,13000,2000,11000),
    -> (102,50000,7000,43000,4000,39000),
    -> (103,25000,5000,20000,2000,18000);
Query OK, 3 rows affected (0.17 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> SELECT * FROM payroll;						// Display payroll.
+--------+-----------+-----------+-------------+------+---------+
| emp_id | basic_pay | deduction | taxable_pay | tax  | net_pay |
+--------+-----------+-----------+-------------+------+---------+
|    101 |     15000 |      2000 |       13000 | 2000 |   11000 |
|    102 |     50000 |      7000 |       43000 | 4000 |   39000 |
|    103 |     25000 |      5000 |       20000 | 2000 |   18000 |
+--------+-----------+-----------+-------------+------+---------+
3 rows in set (0.00 sec)
mysql> SELECT SUM(basic_pay) ,employee.employee_id,employee.employee_name FROM p	// SUM function is use 
ayroll INNER JOIN employee ON payroll.emp_id=employee.employee_id;
+----------------+-------------+---------------+
| SUM(basic_pay) | employee_id | employee_name |
+----------------+-------------+---------------+
|          90000 |         101 | Nikita        |
+----------------+-------------+---------------+
1 row in set (0.11 sec)
mysql> SELECT AVG(basic_pay) ,employee.employee_id,employee.employee_name FROM p	// AVG function is use
ayroll INNER JOIN employee ON payroll.emp_id=employee.employee_id;
+----------------+-------------+---------------+
| AVG(basic_pay) | employee_id | employee_name |
+----------------+-------------+---------------+
|          30000 |         101 | Nikita        |
+----------------+-------------+---------------+
1 row in set (0.04 sec)

mysql> SELECT MIN(basic_pay) ,employee.employee_id,employee.employee_name FROM p	// MIN function is use 
ayroll INNER JOIN employee ON payroll.emp_id=employee.employee_id;
+----------------+-------------+---------------+
| MIN(basic_pay) | employee_id | employee_name |
+----------------+-------------+---------------+
|          15000 |         101 | Nikita        |
+----------------+-------------+---------------+
1 row in set (0.04 sec)

mysql> SELECT MAX(basic_pay) ,employee.employee_id,employee.employee_name FROM p	// MAX function is use
ayroll INNER JOIN employee ON payroll.emp_id=employee.employee_id;
+----------------+-------------+---------------+
| MAX(basic_pay) | employee_id | employee_name |
+----------------+-------------+---------------+
|          50000 |         101 | Nikita        |
+----------------+-------------+---------------+
1 row in set (0.00 sec)

mysql> SELECT COUNT(basic_pay) ,employee.employee_id,employee.employee_name FROM	// COUNT function is use
 payroll INNER JOIN employee ON payroll.emp_id=employee.employee_id;
+------------------+-------------+---------------+
| COUNT(basic_pay) | employee_id | employee_name |
+------------------+-------------+---------------+
|                3 |         101 | Nikita        |
+------------------+-------------+---------------+
1 row in set (0.00 sec)
 
UC12 // Retrive data from new table structure

mysql> SELECT * FROM employee;								// Retrive data from employee table
+-------------+------------+---------------+---------+--------------+--------+
| employee_id | company_id | employee_name | address | phone_number | gender |
+-------------+------------+---------------+---------+--------------+--------+
|         101 |          1 | Nikita        | Lucknow | 9966553366   | F      |
|         102 |          2 | Malvika       | Lucknow | 996653756    | F      |
|         103 |          3 | Kamal         | Delhi   | 9966533586   | M      |
+-------------+------------+---------------+---------+--------------+--------+
3 rows in set (0.00 sec)

mysql> SELECT * FROM employee_payroll;							// Retrive data from employee_payroll table
+----+---------+--------------+---------+------------+--------+-----------+-----
-------+-------------+--------+---------+------------+
| id | name    | phone_number | address | department | gender | basic_pay | dedu
ctions | taxable_pay | tax    | net_pay | start      |
+----+---------+--------------+---------+------------+--------+-----------+-----
-------+-------------+--------+---------+------------+
|  6 | Bill    | NULL         | NULL    |            | M      |    100000 |
     0 |           0 |      0 |       0 | 2018-01-03 |
|  7 | Terisa  | NULL         | NULL    | Sales      | F      |    300000 |
     0 |           0 |      0 |       0 | 2019-11-13 |
|  8 | Charile | NULL         | NULL    |            | M      |    300000 |
     0 |           0 |      0 |       0 | 2020-02-21 |
|  9 | Terisa  | NULL         | TBD     | Marketting | F      |    300000 |
100000 |      200000 | 500000 | 1000000 | 2018-01-02 |
+----+---------+--------------+---------+------------+--------+-----------+-----
-------+-------------+--------+---------+------------+
4 rows in set (0.00 sec)

mysql> SELECT * FROM company;								// Retrive data from company table
+------------+--------------+
| company_id | company_name |
+------------+--------------+
|          1 | TCS          |
|          2 | INFOSYS      |
|          3 | CAPEGEMINI   |
+------------+--------------+
3 rows in set (0.33 sec)

mysql> SELECT MAX(payroll.basic_pay) ,employee.employee_id,employee.employee_nam	// Retrive data from payroll table where basic_pay is maximum
e FROM payroll INNER JOIN employee ON payroll.emp_id=employee.employee_id GROUP
BY employee.gender;
+------------------------+-------------+---------------+
| MAX(payroll.basic_pay) | employee_id | employee_name |
+------------------------+-------------+---------------+
|                  50000 |         101 | Nikita        |
|                  25000 |         103 | Kamal         |
+------------------------+-------------+---------------+
2 rows in set (0.30 sec)

mysql> SELECT MIN(payroll.basic_pay) ,employee.employee_id,employee.employee_nam	// Retrive data from payroll table where basic_pay is minimum
e FROM payroll INNER JOIN employee ON payroll.emp_id=employee.employee_id GROUP
BY employee.gender;
+------------------------+-------------+---------------+
| MIN(payroll.basic_pay) | employee_id | employee_name |
+------------------------+-------------+---------------+
|                  15000 |         101 | Nikita        |
|                  25000 |         103 | Kamal         |
+------------------------+-------------+---------------+
2 rows in set (0.00 sec)
